<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.jhudson</groupId>
    <artifactId>jget-ssm-params</artifactId>
    <version>0.1.0</version>

    <name>jget-ssm-params</name>
    <description>jget-ssm-params - Get and export AWS SSM parameter store values</description>
    <inceptionYear>2025</inceptionYear>
    <url>https://github.com/johhud1/jget-ssm-params</url>

    <scm>
        <url>scm:git:git@github.com:johhud1/jget-ssm-params</url>
        <connection>scm:git:git@github.com:johhud1/jget-ssm-params</connection>
        <developerConnection>scm:git:git@github.com:johhud1/jget-ssm-params</developerConnection>
      <tag>jget-ssm-params-0.1.0</tag>
  </scm>

   <developers>
        <developer>
            <id>johhud1</id>
            <name>John Hudson</name>
        </developer>
    </developers>
    <licenses>
        <license>
            <name>MIT</name>
            <url>https://raw.githubusercontent.com/johhud1/jget-ssm-params/refs/heads/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>21</java.version>
        <maven.compiler.release>21</maven.compiler.release>

        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <assembly-plugin.version>3.4.2</assembly-plugin.version>
        <jreleaser-plugin.version>1.3.0</jreleaser-plugin.version>
        <os-plugin.version>1.7.0</os-plugin.version>
        <executable-suffix />
        <distribution.directory>${project.build.directory}/distributions</distribution.directory>

        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
        <quarkus.platform.version>3.17.7</quarkus.platform.version>
        <skipITs>true</skipITs>
        <spotless.version>2.44.2</spotless.version>
        <surefire-plugin.version>3.5.0</surefire-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-amazon-services-bom</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.quarkiverse.amazonservices</groupId>
            <artifactId>quarkus-amazon-ssm</artifactId>
        </dependency>
        <!-- required for ssm client -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>url-connection-client</artifactId>
        </dependency>
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>apache-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-netty</artifactId>
        </dependency> 
        <!-- end required for ssm client -->

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-picocli</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-arc</artifactId>
        </dependency>

        <dependency>
            <artifactId>commons-lang3</artifactId>
            <groupId>org.apache.commons</groupId>
            <version>3.17.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.verils</groupId>
            <artifactId>gotemplate4j</artifactId>
            <version>0.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>3.48.4</version>
        </dependency>

        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-plugin.version}</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                            <goal>native-image-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
                <configuration>
                    <parameters>true</parameters>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <!-- optional: limit format enforcement to just the files changed by this feature branch -->
                    <!-- <ratchetFrom>origin/master</ratchetFrom> -->
                    <formats>
                    <!-- you can define as many formats as you want, each is independent -->
                        <format>
                            <!-- define the files to apply to -->
                            <includes>
                            <include>.gitattributes</include>
                            <include>.gitignore</include>
                            </includes>
                            <!-- define the steps to apply to those files -->
                            <trimTrailingWhitespace />
                            <endWithNewline />
                            <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                            </indent>
                        </format>
                    </formats>
                    <!-- define a language-specific format -->
                    <java>
                        <!-- no need to specify files, inferred automatically, but you can if you want -->

                        <!-- apply a specific flavor of google-java-format and reflow long strings -->
                        <palantirJavaFormat>
                            <version>2.39.0</version>                     <!-- optional -->
                            <style>PALANTIR</style>                       <!-- or AOSP/GOOGLE (optional) -->
                            <formatJavadoc>false</formatJavadoc>          <!-- defaults to false (optional, requires at least Palantir 2.39.0) -->
                        </palantirJavaFormat>
                        <importOrder /> <!-- standard import order -->
                        <removeUnusedImports />
                        <formatAnnotations />
                    </java>
                </configuration>
                </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>false</skipITs>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
        </profile>

        <profile> 
            <id>checkerframework</id>
            <!-- If you omit the activation block, run mvn with "-P checkerframework" to run checkers. -->
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                        <fork>true</fork> <!-- Must fork or else JVM arguments are ignored. -->
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.checkerframework</groupId>
                                <artifactId>checker</artifactId>
                                <version>3.48.4</version>
                            </path>
                        </annotationProcessorPaths>
                        <annotationProcessors>
                            <!-- Add all the checkers you want to enable here -->
                            <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
                        </annotationProcessors>
                        <compilerArgs>
                            <arg>-Xmaxerrs</arg>
                            <arg>10000</arg>
                            <arg>-Xmaxwarns</arg>
                            <arg>10000</arg>
                            <!-- <arg>-Awarns</arg> --> <!-- -Awarns turns type-checking errors into warnings. -->
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                        </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--release related profiles-->
        <profile>
            <id>dist</id>
            <build>
                <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly-plugin.version}</version>
                    <configuration>
                    <attach>false</attach>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}-${project.version}-${os.detected.classifier}</finalName>
                    <outputDirectory>${distribution.directory}</outputDirectory>
                    <workDirectory>${project.build.directory}/assembly/work</workDirectory>
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                    </configuration>
                    <executions>
                    <execution>
                        <id>make-distribution</id>
                        <phase>package</phase>
                        <goals>
                        <goal>single</goal>
                        </goals>
                    </execution>
                    </executions>
                </plugin>
                </plugins>
            </build>
            </profile>
            <profile>
            <id>dist-windows</id>
            <activation>
                <os>
                <family>windows</family>
                </os>
            </activation>
            <properties>
                <executable-suffix>.exe</executable-suffix>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jreleaser</groupId>
                        <artifactId>jreleaser-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <configuration>
                            <jreleaser>
                                <release>
                                <github>
                                    <changelog>
                                    <formatted>ALWAYS</formatted>
                                    <preset>conventional-commits</preset>
                                    </changelog>
                                </github>
                                </release>
                                <distributions>
                                    <jget-ssm-params>
                                        <type>BINARY</type>
                                        <artifacts>
                                        <artifact>
                                            <path>${distribution.directory}/{{distributionName}}-{{projectVersion}}-linux-x86_64.tar.gz</path>
                                            <platform>linux-x86_64</platform>
                                        </artifact>
                                        <artifact>
                                            <path>${distribution.directory}/{{distributionName}}-{{projectVersion}}-windows-x86_64.zip</path>
                                            <platform>windows-x86_64</platform>
                                        </artifact>
                                        <artifact>
                                            <path>${distribution.directory}/{{distributionName}}-{{projectVersion}}-osx-x86_64.zip</path>
                                            <platform>osx-x86_64</platform>
                                        </artifact>
                                        </artifacts>
                                    </jget-ssm-params>
                                </distributions>
                            </jreleaser>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
